rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    function isSignIn(){
        return request.auth != null;
      }

    // function hasVerifiedEmail(){
    //   return request.auth.token.email_verified;
    // }

    // function hasUnrevokedIDToken(){
    //   return request.auth.token.auth_time > get(/databases/$(database)/documents/revoked_tokens/$(userId)).data.revokeTime;
    // }

    // function isUser(){
    //   return request.auth.token.user;
    // }

    function isAdmin(){
      return request.auth.token.admin;
    }

    match /users/{userId}/{document=**} {
      function isOwner(){
      return request.auth.uid == userId;
    }
      allow read, write: if isSignIn() && isOwner();
    }

    match /roles/{email} {
      function checkEmail(){
        return request.auth.token.email == email;
      }
      allow read: if isSignIn() && isAdmin() && checkEmail();
      allow write: if false;
    }

    match /revoked_tokens/{userId} {
      allow read, write: if false;
    }
  }
}
